dataset:
  name: mtNuScenes
  dataset_path: # path/to/your/dataset
  cache_dir: ./cache
  test_result_folder: ./test
  num_channels: &chans
    25
  #use_cache: true
  #steps_per_epoch_train: 10000

model:
  name: PointPillars
  ckpt_path: # path/to/your/checkpoint

  batcher: "ignore"

  point_cloud_range: [-50, -50, -5, 50, 50, 3.0]
  classes: [
    'pedestrian', 'bike', 'car', 'other_vehicle'
  ]
  num_classes: 4

  loss:
    cls_focal:
      gamma: 2.0
      alpha: 0.25
      loss_weight: 1.0
      log_weight: 0.0
    reg_smooth_l1:
      beta: 0.11
      loss_weight: 2.0
      log_weight: 0.0
    dir_cross_entropy:
      loss_weight: 0.2
      log_weight: 0.0

  voxelize:
    max_num_points: 20
    voxel_size: &vsize
      [0.25, 0.25, 8]
    max_voxels: [30000, 40000]

  voxel_encoder:
    in_channels: *chans
    feat_channels: [64, 64]
    voxel_size: *vsize

  scatter:
    in_channels: 64
    output_shape: [400, 400]

  backbone:
    in_channels: 64
    out_channels: [64, 128, 256]
    layer_nums: [3, 5, 5]
    layer_strides: [2, 2, 2]

  neck:
    in_channels: [64, 128, 256]
    out_channels: [128, 128, 128]
    upsample_strides: [1, 2, 4]
    use_conv_for_no_stride: false

  head:
    in_channels: 384
    feat_channels: 384
    nms_pre: 1000
    score_thr: 0.05
    ranges: [
      [-49.6, -49.6, -1.0, 49.6, 49.6, -1.0],
      [-49.6, -49.6, -1.0, 49.6, 49.6, -1.0],
      [-49.6, -49.6, -1.0, 49.6, 49.6, -1.0],
      [-49.6, -49.6, -1.0, 49.6, 49.6, -1.0],
    ]
    sizes: [
      [0.66344886, 0.7256437, 1.75748069],    # pedestrian
      [0.60058911, 1.68452161, 1.27192197],   # bike
      [1.95017717, 4.60718145, 1.72270761],   # car
      [1.95017717, 4.60718145, 1.72270761],   # other_vehicle
    ]
    rotations: [0, 1.57]
    iou_thr: [[0.3, 0.6]]
    dir_offset: 0.7854

  augment:
    #PointShuffle: True
    #ObjectRangeFilter:
    #  point_cloud_range: [-50, -50, -5, 50, 50, 3.0]
    #ObjectSample:
    #  pickle_path: '/data/nuScenes/bboxes.pkl'
    #  min_points_dict:
    #    pedestrian: 10
    #    bike: 10
    #    car: 5
    #    other_vehicle: 5
    #  sample_dict:
    #    pedestrian: 10
    #    bike: 10
    #    car: 15
    #    other_vehicle: 15

pipeline:
  name: ObjectDetection
  test_compute_metric: true
  batch_size: 4
  val_batch_size: 4
  test_batch_size: 4
  num_workers: 4
  save_ckpt_freq: 5
  max_epoch: 35
  main_log_dir: ./logs
  train_sum_dir: train_log
  grad_clip_norm: 2

  optimizer:
    lr: 0.001
  scheduler:
    step_size: 10
    gamma: 0.1

  # evaluation properties
  #overlaps: [0.7]
  overlaps: [0.5]
  similar_classes: {
    #motorcycle: bicycle
  }
  difficulties: [0]
  summary:
    record_for: []
    max_pts:
    use_reference: false
    max_outputs: 1
